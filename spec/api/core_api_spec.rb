=begin
#Katapult Core API

#Welcome to the documentation for the Katapult Core API

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.1.0

=end

require 'spec_helper'
require 'json'

# Unit tests for KatapultAPI::CoreApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CoreApi' do
  before do
    # run before each test
    @api_instance = KatapultAPI::CoreApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CoreApi' do
    it 'should create an instance of CoreApi' do
      expect(@api_instance).to be_instance_of(KatapultAPI::CoreApi)
    end
  end

  # unit tests for delete_disk_backup_policy
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteDiskBackupPolicyRequest] :delete_disk_backup_policy_request 
  # @return [DeleteDiskBackupPolicy200Response]
  describe 'delete_disk_backup_policy test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_disk_backup_policy_schedule
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteDiskBackupPolicyScheduleRequest] :delete_disk_backup_policy_schedule_request 
  # @return [DeleteDiskBackupPolicySchedule200Response]
  describe 'delete_disk_backup_policy_schedule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_dns_record
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteDnsRecordsDnsRecordRequest] :delete_dns_records_dns_record_request 
  # @return [DeleteDnsZone200Response]
  describe 'delete_dns_record test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_dns_records_dns_record
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteDnsRecordsDnsRecordRequest] :delete_dns_records_dns_record_request 
  # @return [DeleteDnsRecordsDnsRecord200Response]
  describe 'delete_dns_records_dns_record test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_dns_zone
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteDnsZonesDnsZoneRequest] :delete_dns_zones_dns_zone_request 
  # @return [DeleteDnsZone200Response]
  describe 'delete_dns_zone test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_dns_zones_dns_zone
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteDnsZonesDnsZoneRequest] :delete_dns_zones_dns_zone_request 
  # @return [DeleteDnsZonesDnsZone200Response]
  describe 'delete_dns_zones_dns_zone test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_file_storage_volume
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteFileStorageVolumeRequest] :delete_file_storage_volume_request 
  # @return [DeleteFileStorageVolume200Response]
  describe 'delete_file_storage_volume test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_ip_address
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteIpAddressRequest] :delete_ip_address_request 
  # @return [Object]
  describe 'delete_ip_address test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_load_balancer
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteLoadBalancerRequest] :delete_load_balancer_request 
  # @return [DeleteLoadBalancer200Response]
  describe 'delete_load_balancer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_load_balancers_rules_load_balancer_rule
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteLoadBalancersRulesLoadBalancerRuleRequest] :delete_load_balancers_rules_load_balancer_rule_request 
  # @return [DeleteLoadBalancersRulesLoadBalancerRule200Response]
  describe 'delete_load_balancers_rules_load_balancer_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_security_group
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteSecurityGroupRequest] :delete_security_group_request 
  # @return [DeleteSecurityGroup200Response]
  describe 'delete_security_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_security_groups_rules_security_group_rule
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteSecurityGroupsRulesSecurityGroupRuleRequest] :delete_security_groups_rules_security_group_rule_request 
  # @return [DeleteSecurityGroupsRulesSecurityGroupRule200Response]
  describe 'delete_security_groups_rules_security_group_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_ssh_key
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteSshKeyRequest] :delete_ssh_key_request 
  # @return [PostOrganizationSshKeys201Response]
  describe 'delete_ssh_key test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_tag
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteTagRequest] :delete_tag_request 
  # @return [DeleteTag200Response]
  describe 'delete_tag test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_trash_object
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteTrashObjectRequest] :delete_trash_object_request 
  # @return [PutVirtualMachinePackage200Response]
  describe 'delete_trash_object test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_virtual_machine
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteVirtualMachineRequest] :delete_virtual_machine_request 
  # @return [DeleteVirtualMachine200Response]
  describe 'delete_virtual_machine test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_virtual_machine_group
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteVirtualMachineGroupRequest] :delete_virtual_machine_group_request 
  # @return [DeleteVirtualMachineGroup200Response]
  describe 'delete_virtual_machine_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_certificate
  # @param [Hash] opts the optional parameters
  # @option opts [String] :certificate_id All &#39;certificate[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetCertificate200Response]
  describe 'get_certificate test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_countries
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetCountries200Response]
  describe 'get_countries test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_country
  # @param [Hash] opts the optional parameters
  # @option opts [String] :country_id The country to return. All &#39;country[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :country_iso_code2 The country to return. All &#39;country[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :country_iso_code3 The country to return. All &#39;country[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetCountry200Response]
  describe 'get_country test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_country_country_states
  # @param [Hash] opts the optional parameters
  # @option opts [String] :country_id The country to return states for. All &#39;country[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :country_iso_code2 The country to return states for. All &#39;country[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :country_iso_code3 The country to return states for. All &#39;country[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetCountryCountryStates200Response]
  describe 'get_country_country_states test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_country_state
  # @param [Hash] opts the optional parameters
  # @option opts [String] :country_state_id The country state to return. All &#39;country_state[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetCountryState200Response]
  describe 'get_country_state test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_currencies
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetCurrencies200Response]
  describe 'get_currencies test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_currency
  # @param [Hash] opts the optional parameters
  # @option opts [String] :currency_id The currency to return. All &#39;currency[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :currency_iso_code The currency to return. All &#39;currency[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetCurrency200Response]
  describe 'get_currency test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_data_center
  # @param [Hash] opts the optional parameters
  # @option opts [String] :data_center_id All &#39;data_center[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :data_center_permalink All &#39;data_center[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetDataCenter200Response]
  describe 'get_data_center test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_data_center_default_network
  # @param [Hash] opts the optional parameters
  # @option opts [String] :data_center_id All &#39;data_center[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :data_center_permalink All &#39;data_center[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetDataCenterDefaultNetwork200Response]
  describe 'get_data_center_default_network test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_data_center_gpu_types
  # @param [Hash] opts the optional parameters
  # @option opts [String] :data_center_id The data center to list GPU types for. All &#39;data_center[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :data_center_permalink The data center to list GPU types for. All &#39;data_center[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetDataCenterGpuTypes200Response]
  describe 'get_data_center_gpu_types test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_data_centers
  # @param [Hash] opts the optional parameters
  # @return [GetDataCenters200Response]
  describe 'get_data_centers test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_disk
  # @param [Hash] opts the optional parameters
  # @option opts [String] :disk_id The disk to return. All &#39;disk[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetDisk200Response]
  describe 'get_disk test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_disk_backup_policy
  # @param [Hash] opts the optional parameters
  # @option opts [String] :disk_backup_policy_id The disk backup policy to get information for. All &#39;disk_backup_policy[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetDiskBackupPolicy200Response]
  describe 'get_disk_backup_policy test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_disk_disk_backup_policies
  # @param [Hash] opts the optional parameters
  # @option opts [String] :disk_id The disk to return disk backup policies for. All &#39;disk[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetDiskDiskBackupPolicies200Response]
  describe 'get_disk_disk_backup_policies test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_disk_template
  # @param [Hash] opts the optional parameters
  # @option opts [String] :disk_template_id The disk template to return. All &#39;disk_template[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :disk_template_permalink The disk template to return. All &#39;disk_template[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetDiskTemplate200Response]
  describe 'get_disk_template test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_disk_template_version
  # @param [Hash] opts the optional parameters
  # @option opts [String] :disk_template_version_id The disk template version to return. All &#39;disk_template_version[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetDiskTemplateVersion200Response]
  describe 'get_disk_template_version test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_disk_template_version_spec
  # @param [Hash] opts the optional parameters
  # @option opts [String] :disk_template_version_id The disk template version to return. All &#39;disk_template_version[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetDiskTemplateVersionSpec200Response]
  describe 'get_disk_template_version_spec test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_disk_template_versions
  # @param [Hash] opts the optional parameters
  # @option opts [String] :disk_template_id The disk template to return the versions for. All &#39;disk_template[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :disk_template_permalink The disk template to return the versions for. All &#39;disk_template[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetDiskTemplateVersions200Response]
  describe 'get_disk_template_versions test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_dns_record
  # @param [Hash] opts the optional parameters
  # @option opts [String] :dns_record_id All &#39;dns_record[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetDnsRecord200Response]
  describe 'get_dns_record test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_dns_records_dns_record
  # @param [Hash] opts the optional parameters
  # @option opts [String] :dns_record_id The DNS record to return information for. All &#39;dns_record[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetDnsRecordsDnsRecord200Response]
  describe 'get_dns_records_dns_record test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_dns_zone
  # @param [Hash] opts the optional parameters
  # @option opts [String] :dns_zone_id All &#39;dns_zone[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :dns_zone_name All &#39;dns_zone[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetDnsZone200Response]
  describe 'get_dns_zone test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_dns_zone_records
  # @param [Hash] opts the optional parameters
  # @option opts [String] :dns_zone_id All &#39;dns_zone[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :dns_zone_name All &#39;dns_zone[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetDnsZoneRecords200Response]
  describe 'get_dns_zone_records test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_dns_zones_dns_zone
  # @param [Hash] opts the optional parameters
  # @option opts [String] :dns_zone_id The DNS zone to return information for. All &#39;dns_zone[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :dns_zone_name The DNS zone to return information for. All &#39;dns_zone[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetDnsZonesDnsZone200Response]
  describe 'get_dns_zones_dns_zone test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_dns_zones_dns_zone_records
  # @param [Hash] opts the optional parameters
  # @option opts [String] :dns_zone_id The DNS zone to find all DNS records for. All &#39;dns_zone[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :dns_zone_name The DNS zone to find all DNS records for. All &#39;dns_zone[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetDnsZonesDnsZoneRecords200Response]
  describe 'get_dns_zones_dns_zone_records test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_dns_zones_dns_zone_verification_details
  # @param [Hash] opts the optional parameters
  # @option opts [String] :dns_zone_id The DNS zone to get verification details for. All &#39;dns_zone[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :dns_zone_name The DNS zone to get verification details for. All &#39;dns_zone[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetDnsZonesDnsZoneVerificationDetails200Response]
  describe 'get_dns_zones_dns_zone_verification_details test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_file_storage_volume
  # @param [Hash] opts the optional parameters
  # @option opts [String] :file_storage_volume_id The file storage volume to return. All &#39;file_storage_volume[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetFileStorageVolume200Response]
  describe 'get_file_storage_volume test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_gpu_type
  # @param [Hash] opts the optional parameters
  # @option opts [String] :gpu_type_id All &#39;gpu_type[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :gpu_type_permalink All &#39;gpu_type[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetGpuType200Response]
  describe 'get_gpu_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_gpu_types
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetGpuTypes200Response]
  describe 'get_gpu_types test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_ip_address
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ip_address_id The IP address to find. All &#39;ip_address[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :ip_address_address The IP address to find. All &#39;ip_address[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetIpAddress200Response]
  describe 'get_ip_address test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_load_balancer
  # @param [Hash] opts the optional parameters
  # @option opts [String] :load_balancer_id The load balancer to return the details for. All &#39;load_balancer[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :load_balancer_api_reference The load balancer to return the details for. All &#39;load_balancer[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetLoadBalancer200Response]
  describe 'get_load_balancer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_load_balancer_rules
  # @param [Hash] opts the optional parameters
  # @option opts [String] :load_balancer_id The load balancer to return all load rules for. All &#39;load_balancer[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :load_balancer_api_reference The load balancer to return all load rules for. All &#39;load_balancer[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetLoadBalancerRules200Response]
  describe 'get_load_balancer_rules test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_load_balancers_rules_load_balancer_rule
  # @param [Hash] opts the optional parameters
  # @option opts [String] :load_balancer_rule_id The load balancer rule to return the details for. All &#39;load_balancer_rule[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetLoadBalancersRulesLoadBalancerRule200Response]
  describe 'get_load_balancers_rules_load_balancer_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_network
  # @param [Hash] opts the optional parameters
  # @option opts [String] :network_id The network to return. All &#39;network[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :network_permalink The network to return. All &#39;network[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetNetwork200Response]
  describe 'get_network test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_operating_system
  # @param [Hash] opts the optional parameters
  # @option opts [String] :operating_system_id The operating system to return. All &#39;operating_system[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetOperatingSystem200Response]
  describe 'get_operating_system test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_operating_systems
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetOperatingSystems200Response]
  describe 'get_operating_systems test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetOrganization200Response]
  describe 'get_organization test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_available_networks
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetOrganizationAvailableNetworks200Response]
  describe 'get_organization_available_networks test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_certificates
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetOrganizationCertificates200Response]
  describe 'get_organization_certificates test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_disk_backup_policies
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id The organization to return disk backup policies for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain The organization to return disk backup policies for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetOrganizationDiskBackupPolicies200Response]
  describe 'get_organization_disk_backup_policies test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_disk_templates
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id The organization to find disk templates for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain The organization to find disk templates for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Boolean] :include_universal Whether or not to include universal templates
  # @option opts [String] :operating_system_id An operating system to use to filter disk templates. All &#39;operating_system[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetOrganizationDiskTemplates200Response]
  describe 'get_organization_disk_templates test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_disks
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id The organization to find disks for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain The organization to find disks for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetOrganizationDisks200Response]
  describe 'get_organization_disks test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_dns_zones
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id The organization to return DNS zones for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain The organization to return DNS zones for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetOrganizationDnsZones200Response]
  describe 'get_organization_dns_zones test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_dns_zones_nameservers
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetOrganizationDnsZonesNameservers200Response]
  describe 'get_organization_dns_zones_nameservers test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_file_storage_volumes
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id The organization to return all file storage volumes for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain The organization to return all file storage volumes for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetOrganizationFileStorageVolumes200Response]
  describe 'get_organization_file_storage_volumes test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_ip_addresses
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id The organization to use when looking up IP addresses. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain The organization to use when looking up IP addresses. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Boolean] :allocated If true, only return allocated IP addresss. If false, only return unallocated IP addresses.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetOrganizationIpAddresses200Response]
  describe 'get_organization_ip_addresses test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_load_balancers
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id The organization to return all load balancers for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain The organization to return all load balancers for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetOrganizationLoadBalancers200Response]
  describe 'get_organization_load_balancers test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_managed
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetOrganizationManaged200Response]
  describe 'get_organization_managed test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_network_speed_profiles
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id The organization to use when looking up network speed profiles. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain The organization to use when looking up network speed profiles. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetOrganizationNetworkSpeedProfiles200Response]
  describe 'get_organization_network_speed_profiles test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_security_groups
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id The organization to return all security groups for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain The organization to return all security groups for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetOrganizationSecurityGroups200Response]
  describe 'get_organization_security_groups test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_ssh_keys
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id The organization to list SSH keys for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain The organization to list SSH keys for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetOrganizationSshKeys200Response]
  describe 'get_organization_ssh_keys test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_tags
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id The organization to list the tags for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain The organization to list the tags for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetOrganizationTags200Response]
  describe 'get_organization_tags test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_trash_objects
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id The organization to find all trash objects for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain The organization to find all trash objects for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetOrganizationTrashObjects200Response]
  describe 'get_organization_trash_objects test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_users_with_access
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetOrganizationUsersWithAccess200Response]
  describe 'get_organization_users_with_access test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_virtual_machine_groups
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id The organization to return groups for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain The organization to return groups for. All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetOrganizationVirtualMachineGroups200Response]
  describe 'get_organization_virtual_machine_groups test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_virtual_machines
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetOrganizationVirtualMachines200Response]
  describe 'get_organization_virtual_machines test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organizations
  # @param [Hash] opts the optional parameters
  # @return [GetOrganizations200Response]
  describe 'get_organizations test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organizations_organization_dns_zones
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetOrganizationDnsZones200Response]
  describe 'get_organizations_organization_dns_zones test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_security_group
  # @param [Hash] opts the optional parameters
  # @option opts [String] :security_group_id The security group to return the details for. All &#39;security_group[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetSecurityGroup200Response]
  describe 'get_security_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_security_group_rules
  # @param [Hash] opts the optional parameters
  # @option opts [String] :security_group_id The security group to return all load rules for. All &#39;security_group[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetSecurityGroupRules200Response]
  describe 'get_security_group_rules test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_security_groups_rules_security_group_rule
  # @param [Hash] opts the optional parameters
  # @option opts [String] :security_group_rule_id The security group rule to return the details for. All &#39;security_group_rule[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetSecurityGroupsRulesSecurityGroupRule200Response]
  describe 'get_security_groups_rules_security_group_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_tag
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tag_id The tag to load the details for. All &#39;tag[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetTag200Response]
  describe 'get_tag test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_task
  # @param [Hash] opts the optional parameters
  # @option opts [String] :task_id All &#39;task[]&#39; params are mutually exclusive, only one can be provided.
  # @return [PutVirtualMachinePackage200Response]
  describe 'get_task test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_trash_object
  # @param [Hash] opts the optional parameters
  # @option opts [String] :trash_object_id The trash object to find. All &#39;trash_object[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :trash_object_object_id The trash object to find. All &#39;trash_object[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetTrashObject200Response]
  describe 'get_trash_object test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_users_current
  # @param [Hash] opts the optional parameters
  # @return [GetUsersCurrent200Response]
  describe 'get_users_current test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_virtual_machine
  # @param [Hash] opts the optional parameters
  # @option opts [String] :virtual_machine_id All &#39;virtual_machine[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :virtual_machine_fqdn All &#39;virtual_machine[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetVirtualMachine200Response]
  describe 'get_virtual_machine test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_virtual_machine_disk_backup_policies
  # @param [Hash] opts the optional parameters
  # @option opts [String] :virtual_machine_id The virtual machine to return disk backup policies for. All &#39;virtual_machine[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :virtual_machine_fqdn The virtual machine to return disk backup policies for. All &#39;virtual_machine[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Boolean] :include_disks If true, the returned list will include backup policies owned by disks assigned to this virtual machine in addition to those that belong to the whole virtual machine
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetVirtualMachineDiskBackupPolicies200Response]
  describe 'get_virtual_machine_disk_backup_policies test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_virtual_machine_disks
  # @param [Hash] opts the optional parameters
  # @option opts [String] :virtual_machine_id The virtual machine to find disks for. All &#39;virtual_machine[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :virtual_machine_fqdn The virtual machine to find disks for. All &#39;virtual_machine[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetVirtualMachineDisks200Response]
  describe 'get_virtual_machine_disks test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_virtual_machine_group
  # @param [Hash] opts the optional parameters
  # @option opts [String] :virtual_machine_group_id The virtual machine group to retrieve. All &#39;virtual_machine_group[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetVirtualMachineGroup200Response]
  describe 'get_virtual_machine_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_virtual_machine_network_interface
  # @param [Hash] opts the optional parameters
  # @option opts [String] :virtual_machine_id The virtual machine to find the network interface for. All &#39;virtual_machine[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :virtual_machine_fqdn The virtual machine to find the network interface for. All &#39;virtual_machine[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :network_id The network to find the network interface for. All &#39;network[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :network_permalink The network to find the network interface for. All &#39;network[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetVirtualMachineNetworkInterface200Response]
  describe 'get_virtual_machine_network_interface test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_virtual_machine_network_interface_available_ips_address_version
  # @param address_version The IP address version to return results for
  # @param [Hash] opts the optional parameters
  # @option opts [String] :virtual_machine_network_interface_id The network interface to get IP addresses for. All &#39;virtual_machine_network_interface[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetVirtualMachineNetworkInterfaceAvailableIpsAddressVersion200Response]
  describe 'get_virtual_machine_network_interface_available_ips_address_version test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_virtual_machine_network_interfaces
  # @param [Hash] opts the optional parameters
  # @option opts [String] :virtual_machine_id The virtual machine to show network interfaces for. All &#39;virtual_machine[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :virtual_machine_fqdn The virtual machine to show network interfaces for. All &#39;virtual_machine[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetVirtualMachineNetworkInterfaces200Response]
  describe 'get_virtual_machine_network_interfaces test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_virtual_machine_package
  # @param [Hash] opts the optional parameters
  # @option opts [String] :virtual_machine_package_id All &#39;virtual_machine_package[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :virtual_machine_package_permalink All &#39;virtual_machine_package[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetVirtualMachinePackage200Response]
  describe 'get_virtual_machine_package test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_virtual_machine_packages
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organization_id Provide an organization to only show packages available to the given organization (otherwise only public packages will be displayed). All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :organization_sub_domain Provide an organization to only show packages available to the given organization (otherwise only public packages will be displayed). All &#39;organization[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @return [GetVirtualMachinePackages200Response]
  describe 'get_virtual_machine_packages test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_virtual_machines_builds_virtual_machine_build
  # @param [Hash] opts the optional parameters
  # @option opts [String] :virtual_machine_build_id All &#39;virtual_machine_build[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetVirtualMachinesBuildsVirtualMachineBuild200Response]
  describe 'get_virtual_machines_builds_virtual_machine_build test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_vmnivmni
  # @param [Hash] opts the optional parameters
  # @option opts [String] :virtual_machine_network_interface_id The network interface to show the information for. All &#39;virtual_machine_network_interface[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetVMNIVMNI200Response]
  describe 'get_vmnivmni test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_zone
  # @param [Hash] opts the optional parameters
  # @option opts [String] :zone_id The zone to find. All &#39;zone[]&#39; params are mutually exclusive, only one can be provided.
  # @option opts [String] :zone_permalink The zone to find. All &#39;zone[]&#39; params are mutually exclusive, only one can be provided.
  # @return [GetZone200Response]
  describe 'get_zone test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_zones
  # @param [Hash] opts the optional parameters
  # @return [GetZones200Response]
  describe 'get_zones test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for patch_disk_backup_policy
  # @param [Hash] opts the optional parameters
  # @option opts [PatchDiskBackupPolicyRequest] :patch_disk_backup_policy_request 
  # @return [PatchDiskBackupPolicy200Response]
  describe 'patch_disk_backup_policy test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for patch_dns_record
  # @param [Hash] opts the optional parameters
  # @option opts [PatchDnsRecordRequest] :patch_dns_record_request 
  # @return [PatchDnsRecord200Response]
  describe 'patch_dns_record test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for patch_dns_records_dns_record
  # @param [Hash] opts the optional parameters
  # @option opts [PatchDnsRecordsDnsRecordRequest] :patch_dns_records_dns_record_request 
  # @return [PatchDnsRecordsDnsRecord200Response]
  describe 'patch_dns_records_dns_record test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for patch_dns_zone
  # @param [Hash] opts the optional parameters
  # @option opts [PatchDnsZoneRequest] :patch_dns_zone_request 
  # @return [GetDnsZone200Response]
  describe 'patch_dns_zone test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for patch_file_storage_volume
  # @param [Hash] opts the optional parameters
  # @option opts [PatchFileStorageVolumeRequest] :patch_file_storage_volume_request 
  # @return [PatchFileStorageVolume200Response]
  describe 'patch_file_storage_volume test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for patch_ip_address
  # @param [Hash] opts the optional parameters
  # @option opts [PatchIpAddressRequest] :patch_ip_address_request 
  # @return [PatchIpAddress200Response]
  describe 'patch_ip_address test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for patch_load_balancer
  # @param [Hash] opts the optional parameters
  # @option opts [PatchLoadBalancerRequest] :patch_load_balancer_request 
  # @return [PatchLoadBalancer200Response]
  describe 'patch_load_balancer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for patch_load_balancers_rules_load_balancer_rule
  # @param [Hash] opts the optional parameters
  # @option opts [PatchLoadBalancersRulesLoadBalancerRuleRequest] :patch_load_balancers_rules_load_balancer_rule_request 
  # @return [PatchLoadBalancersRulesLoadBalancerRule200Response]
  describe 'patch_load_balancers_rules_load_balancer_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for patch_security_group
  # @param [Hash] opts the optional parameters
  # @option opts [PatchSecurityGroupRequest] :patch_security_group_request 
  # @return [PatchSecurityGroup200Response]
  describe 'patch_security_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for patch_security_groups_rules_security_group_rule
  # @param [Hash] opts the optional parameters
  # @option opts [PatchSecurityGroupsRulesSecurityGroupRuleRequest] :patch_security_groups_rules_security_group_rule_request 
  # @return [PatchSecurityGroupsRulesSecurityGroupRule200Response]
  describe 'patch_security_groups_rules_security_group_rule test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for patch_tag
  # @param [Hash] opts the optional parameters
  # @option opts [PatchTagRequest] :patch_tag_request 
  # @return [PatchTag200Response]
  describe 'patch_tag test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for patch_virtual_machine
  # @param [Hash] opts the optional parameters
  # @option opts [PatchVirtualMachineRequest] :patch_virtual_machine_request 
  # @return [PatchVirtualMachine200Response]
  describe 'patch_virtual_machine test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for patch_virtual_machine_group
  # @param [Hash] opts the optional parameters
  # @option opts [PatchVirtualMachineGroupRequest] :patch_virtual_machine_group_request 
  # @return [PatchVirtualMachineGroup200Response]
  describe 'patch_virtual_machine_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for patch_virtual_machine_network_interface_update_speed_profile
  # @param [Hash] opts the optional parameters
  # @option opts [PatchVirtualMachineNetworkInterfaceUpdateSpeedProfileRequest] :patch_virtual_machine_network_interface_update_speed_profile_request 
  # @return [PatchVirtualMachineNetworkInterfaceUpdateSpeedProfile200Response]
  describe 'patch_virtual_machine_network_interface_update_speed_profile test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_disk_disk_backup_policies
  # @param [Hash] opts the optional parameters
  # @option opts [PostDiskDiskBackupPoliciesRequest] :post_disk_disk_backup_policies_request 
  # @return [PostDiskDiskBackupPolicies200Response]
  describe 'post_disk_disk_backup_policies test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_dns_zone_records
  # @param [Hash] opts the optional parameters
  # @option opts [PostDnsZoneRecordsRequest] :post_dns_zone_records_request 
  # @return [PostDnsZoneRecords200Response]
  describe 'post_dns_zone_records test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_dns_zone_verify
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteDnsZonesDnsZoneRequest] :delete_dns_zones_dns_zone_request 
  # @return [GetDnsZone200Response]
  describe 'post_dns_zone_verify test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_dns_zones_dns_zone_records
  # @param [Hash] opts the optional parameters
  # @option opts [PostDnsZonesDnsZoneRecordsRequest] :post_dns_zones_dns_zone_records_request 
  # @return [PostDnsZonesDnsZoneRecords200Response]
  describe 'post_dns_zones_dns_zone_records test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_dns_zones_dns_zone_update_ttl
  # @param [Hash] opts the optional parameters
  # @option opts [PostDnsZonesDnsZoneUpdateTtlRequest] :post_dns_zones_dns_zone_update_ttl_request 
  # @return [PostDnsZonesDnsZoneUpdateTtl200Response]
  describe 'post_dns_zones_dns_zone_update_ttl test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_dns_zones_dns_zone_verify
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteDnsZonesDnsZoneRequest] :delete_dns_zones_dns_zone_request 
  # @return [PostDnsZonesDnsZoneVerify200Response]
  describe 'post_dns_zones_dns_zone_verify test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_invalidate_linked_web_session
  # @param [Hash] opts the optional parameters
  # @option opts [Object] :body 
  # @return [PostInvalidateLinkedWebSession200Response]
  describe 'post_invalidate_linked_web_session test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_ip_address_unallocate
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteIpAddressRequest] :delete_ip_address_request 
  # @return [Object]
  describe 'post_ip_address_unallocate test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_load_balancer_rules
  # @param [Hash] opts the optional parameters
  # @option opts [PostLoadBalancerRulesRequest] :post_load_balancer_rules_request 
  # @return [PostLoadBalancerRules200Response]
  describe 'post_load_balancer_rules test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_organization_dns_zones
  # @param [Hash] opts the optional parameters
  # @option opts [PostOrganizationDnsZonesRequest] :post_organization_dns_zones_request 
  # @return [PostOrganizationDnsZones201Response]
  describe 'post_organization_dns_zones test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_organization_file_storage_volumes
  # @param [Hash] opts the optional parameters
  # @option opts [PostOrganizationFileStorageVolumesRequest] :post_organization_file_storage_volumes_request 
  # @return [PostOrganizationFileStorageVolumes201Response]
  describe 'post_organization_file_storage_volumes test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_organization_ip_addresses
  # @param [Hash] opts the optional parameters
  # @option opts [PostOrganizationIpAddressesRequest] :post_organization_ip_addresses_request 
  # @return [PostVirtualMachineAllocateIp200Response]
  describe 'post_organization_ip_addresses test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_organization_load_balancers
  # @param [Hash] opts the optional parameters
  # @option opts [PostOrganizationLoadBalancersRequest] :post_organization_load_balancers_request 
  # @return [PostOrganizationLoadBalancers200Response]
  describe 'post_organization_load_balancers test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_organization_managed
  # @param [Hash] opts the optional parameters
  # @option opts [PostOrganizationManagedRequest] :post_organization_managed_request 
  # @return [PostOrganizationManaged201Response]
  describe 'post_organization_managed test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_organization_security_groups
  # @param [Hash] opts the optional parameters
  # @option opts [PostOrganizationSecurityGroupsRequest] :post_organization_security_groups_request 
  # @return [PostOrganizationSecurityGroups200Response]
  describe 'post_organization_security_groups test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_organization_ssh_keys
  # @param [Hash] opts the optional parameters
  # @option opts [PostOrganizationSshKeysRequest] :post_organization_ssh_keys_request 
  # @return [PostOrganizationSshKeys201Response]
  describe 'post_organization_ssh_keys test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_organization_tags
  # @param [Hash] opts the optional parameters
  # @option opts [PostOrganizationTagsRequest] :post_organization_tags_request 
  # @return [PostOrganizationTags200Response]
  describe 'post_organization_tags test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_organization_trash_objects_purge_all
  # @param [Hash] opts the optional parameters
  # @option opts [PostOrganizationTrashObjectsPurgeAllRequest] :post_organization_trash_objects_purge_all_request 
  # @return [PutVirtualMachinePackage200Response]
  describe 'post_organization_trash_objects_purge_all test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_organization_virtual_machine_groups
  # @param [Hash] opts the optional parameters
  # @option opts [PostOrganizationVirtualMachineGroupsRequest] :post_organization_virtual_machine_groups_request 
  # @return [PostOrganizationVirtualMachineGroups200Response]
  describe 'post_organization_virtual_machine_groups test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_organization_virtual_machines_build
  # @param [Hash] opts the optional parameters
  # @option opts [PostOrganizationVirtualMachinesBuildRequest] :post_organization_virtual_machines_build_request 
  # @return [PostOrganizationVirtualMachinesBuild201Response]
  describe 'post_organization_virtual_machines_build test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_organization_virtual_machines_build_from_spec
  # @param [Hash] opts the optional parameters
  # @option opts [PostOrganizationVirtualMachinesBuildFromSpecRequest] :post_organization_virtual_machines_build_from_spec_request 
  # @return [PostOrganizationVirtualMachinesBuildFromSpec201Response]
  describe 'post_organization_virtual_machines_build_from_spec test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_organizations_organization_dns_zones
  # @param [Hash] opts the optional parameters
  # @option opts [PostOrganizationsOrganizationDnsZonesRequest] :post_organizations_organization_dns_zones_request 
  # @return [PostOrganizationsOrganizationDnsZones201Response]
  describe 'post_organizations_organization_dns_zones test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_security_group_rules
  # @param [Hash] opts the optional parameters
  # @option opts [PostSecurityGroupRulesRequest] :post_security_group_rules_request 
  # @return [PostSecurityGroupRules200Response]
  describe 'post_security_group_rules test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_trash_object_restore
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteTrashObjectRequest] :delete_trash_object_request 
  # @return [GetTrashObject200Response]
  describe 'post_trash_object_restore test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_virtual_machine_allocate_ip
  # @param [Hash] opts the optional parameters
  # @option opts [PostVirtualMachineAllocateIpRequest] :post_virtual_machine_allocate_ip_request 
  # @return [PostVirtualMachineAllocateIp200Response]
  describe 'post_virtual_machine_allocate_ip test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_virtual_machine_console_sessions
  # @param [Hash] opts the optional parameters
  # @option opts [PostVirtualMachineStartRequest] :post_virtual_machine_start_request 
  # @return [PostVirtualMachineConsoleSessions201Response]
  describe 'post_virtual_machine_console_sessions test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_virtual_machine_disk_backup_policies
  # @param [Hash] opts the optional parameters
  # @option opts [PostVirtualMachineDiskBackupPoliciesRequest] :post_virtual_machine_disk_backup_policies_request 
  # @return [PostVirtualMachineDiskBackupPolicies200Response]
  describe 'post_virtual_machine_disk_backup_policies test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_virtual_machine_network_interface_allocate_ip
  # @param [Hash] opts the optional parameters
  # @option opts [PostVirtualMachineNetworkInterfaceAllocateIpRequest] :post_virtual_machine_network_interface_allocate_ip_request 
  # @return [PostVirtualMachineNetworkInterfaceAllocateIp200Response]
  describe 'post_virtual_machine_network_interface_allocate_ip test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_virtual_machine_network_interface_allocate_new_ip
  # @param [Hash] opts the optional parameters
  # @option opts [PostVirtualMachineNetworkInterfaceAllocateNewIpRequest] :post_virtual_machine_network_interface_allocate_new_ip_request 
  # @return [PostVirtualMachineAllocateIp200Response]
  describe 'post_virtual_machine_network_interface_allocate_new_ip test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_virtual_machine_reset
  # @param [Hash] opts the optional parameters
  # @option opts [PostVirtualMachineStartRequest] :post_virtual_machine_start_request 
  # @return [PostVirtualMachineReset200Response]
  describe 'post_virtual_machine_reset test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_virtual_machine_shutdown
  # @param [Hash] opts the optional parameters
  # @option opts [PostVirtualMachineStartRequest] :post_virtual_machine_start_request 
  # @return [PostVirtualMachineShutdown200Response]
  describe 'post_virtual_machine_shutdown test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_virtual_machine_start
  # @param [Hash] opts the optional parameters
  # @option opts [PostVirtualMachineStartRequest] :post_virtual_machine_start_request 
  # @return [PostVirtualMachineStart200Response]
  describe 'post_virtual_machine_start test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_virtual_machine_stop
  # @param [Hash] opts the optional parameters
  # @option opts [PostVirtualMachineStartRequest] :post_virtual_machine_start_request 
  # @return [PostVirtualMachineStop200Response]
  describe 'post_virtual_machine_stop test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for put_virtual_machine_flexible_resources
  # @param [Hash] opts the optional parameters
  # @option opts [PutVirtualMachineFlexibleResourcesRequest] :put_virtual_machine_flexible_resources_request 
  # @return [PutVirtualMachinePackage200Response]
  describe 'put_virtual_machine_flexible_resources test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for put_virtual_machine_package
  # @param [Hash] opts the optional parameters
  # @option opts [PutVirtualMachinePackageRequest] :put_virtual_machine_package_request 
  # @return [PutVirtualMachinePackage200Response]
  describe 'put_virtual_machine_package test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
